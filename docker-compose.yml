version: "3.7"

networks:
  app-net:

services:
  app:
    build:
      context: ./containers/app
    container_name: ${COMPOSE_PROJECT_NAME}.app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./${COMPOSE_PROJECT_NAME}:/var/www
      - ./builds:/var/www/builds
    networks:
      - app-net

  app-data:
    image: mysql:5.7
    container_name: ${COMPOSE_PROJECT_NAME}.data
    restart: unless-stopped
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-net

  nginx:
    build:
      context: ./containers/nginx
    container_name: ${COMPOSE_PROJECT_NAME}.nginx
    restart: unless-stopped
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./:/var/www
    networks:
      - app-net

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}.redis
    restart: unless-stopped
    networks:
      - app-net

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME}.mail
    ports:
      - ${MAILHOG_PORT}:8025
    networks:
      - app-net

  milisearch:
    image: getmeili/meilisearch
    container_name: ${COMPOSE_PROJECT_NAME}.search
    ports:
      - ${MEILISEARCH_PORT}:7700
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_KEY}
    networks:
      - app-net

  artisan:
    image: ${COMPOSE_PROJECT_NAME}_app
    container_name: ${COMPOSE_PROJECT_NAME}.artisan
    volumes:
      - ./:/var/www:delegated
    depends_on:
      - app
    working_dir: /var/www
    entrypoint: [ 'php', '/var/www/artisan' ]
    networks:
      - app-net

  npm:
    image: ${COMPOSE_PROJECT_NAME}_app
    container_name: ${COMPOSE_PROJECT_NAME}.npm
    volumes:
      - ./:/var/www:delegated
    depends_on:
      - app
    working_dir: /var/www
    entrypoint: [ 'npm' ]
    networks:
      - app-net

  composer:
    image: ${COMPOSE_PROJECT_NAME}_app
    container_name: ${COMPOSE_PROJECT_NAME}.composer
    volumes:
      - ./:/var/www:delegated
    depends_on:
      - app
    working_dir: /var/www
    entrypoint: [ 'composer' ]
    networks:
      - app-net